// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Study.Infrastructure;

namespace Study.Infrastructure.Migrations
{
    [DbContext(typeof(StudyContext))]
    partial class StudyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Study.Domain.CourseAggregate.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be714450-702a-42a1-99d5-7f40915080c6"),
                            Title = "Programming"
                        });
                });

            modelBuilder.Entity("Study.Domain.StudentAggregate.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a17645a-8119-4d44-a667-2268fef51b76"),
                            Name = "Petro"
                        });
                });

            modelBuilder.Entity("Study.Domain.StudentAggregate.StudentCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CourseId");

                    b.Property<Guid>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourse");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1ef046f-1735-4b3a-8a08-5a72b4f0b4b9"),
                            CourseId = new Guid("be714450-702a-42a1-99d5-7f40915080c6"),
                            StudentId = new Guid("0a17645a-8119-4d44-a667-2268fef51b76")
                        });
                });

            modelBuilder.Entity("Study.Domain.StudentAggregate.StudentCourse", b =>
                {
                    b.HasOne("Study.Domain.StudentAggregate.Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
